//
//  KCSViewController.m
//  TrueClaim
//
//  Created by krish on 7/19/14.
//  Copyright (c) 2014 KCSPL. All rights reserved.
//

#import "IntroViewController.h"
#import "HomeViewController.h"
#import "AllConstants.h"
#import "ApplicationData.h"

#define ARC4RANDOM_MAX	0x100000000

@interface IntroViewController ()

@end

@implementation IntroViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"ios_background.png"]];
    
    int numberOfPages = 3 ;
    introImages = @[@"ios_instant_message_image.png",
                    @"ios_my_folder_image.png",
                    @"ios_updates_image.png"];
    
    introText = @[@"Send instant messageges to your \n TRUE Advisor.",
                  @"Read and sign documnets \n in minutes.",
                  @"Receive instant alerts of new status \n updates on your claim"];
    
    self.introLabel.text = [introText objectAtIndex:0];
	
	// define the scroll view content size and enable paging
	[self.scrollView setPagingEnabled: YES] ;
    float scrollContentWidth = self.scrollView.bounds.size.width * numberOfPages;
	[self.scrollView setContentSize: CGSizeMake(scrollContentWidth, self.scrollView.bounds.size.height)] ;
	
	// programmatically add the page control
	 self.pageControl = [[DDPageControl alloc] init] ;
	[self.pageControl setCenter: CGPointMake(self.view.center.x, self.view.bounds.size.height-115.0f)] ;
	[self.pageControl setNumberOfPages: numberOfPages] ;
	[self.pageControl setCurrentPage: 0] ;
	[self.pageControl addTarget: self action: @selector(pageControlClicked:) forControlEvents: UIControlEventValueChanged] ;
	[self.pageControl setDefersCurrentPageDisplay: YES] ;
	[self.pageControl setType: DDPageControlTypeOnFullOffEmpty] ;
	[self.pageControl setOnColor: [UIColor blackColor]] ;
	[self.pageControl setOffColor: [UIColor blackColor]] ;
	[self.pageControl setIndicatorDiameter: 10.0f];
	[self.pageControl setIndicatorSpace: 10.0f] ;
	[self.view addSubview: self.pageControl];
	
	
	//char aLetter ;
	for (int i = 0 ; i < numberOfPages ; i++)
	{
		// determine the frame of the current page
		pageFrame = CGRectMake(i * self.scrollView.bounds.size.width, 0.0f, self.scrollView.bounds.size.width, self.scrollView.bounds.size.height) ;
		
		// create a page as a simple Image
		pageImageView = [[UIImageView alloc] initWithFrame: pageFrame] ;
		
		// add it to the scroll view
		[self.scrollView addSubview: pageImageView] ;
		
		// determine and set its (random) background color
		color = [UIColor colorWithRed: (CGFloat)arc4random()/ARC4RANDOM_MAX green: (CGFloat)arc4random()/ARC4RANDOM_MAX blue: (CGFloat)arc4random()/ARC4RANDOM_MAX alpha: 1.0f];
        
		//[pageLabel setBackgroundColor: color] ;
		
		// set some label properties
//		[pageLabel setFont: [UIFont boldSystemFontOfSize: 200.0f]] ;
//		[pageLabel setTextAlignment: UITextAlignmentCenter] ;
//		[pageLabel setTextColor: [UIColor darkTextColor]] ;
//		
//		// set the label's text as the letter corresponding to the current page index
//		aLetter = (char)((i+65)-(i/26)*26) ;	// the capitalized alphabet characters are in the range 65-90
//		[pageLabel setText: [NSString stringWithFormat: @"%c", aLetter]] ;
        
        [pageImageView setImage:[UIImage imageNamed:[introImages objectAtIndex:i]]];
    }
    
}

-(void) viewWillAppear:(BOOL)animated
{
    self.navigationController.navigationBarHidden = YES;
}

    
#pragma mark -
#pragma mark DDPageControl triggered actions
    
- (void) pageControlClicked:(id)sender
{
        DDPageControl *thePageControl = (DDPageControl *)sender ;
        
        // we need to scroll to the new index
        [self.scrollView setContentOffset: CGPointMake(self.scrollView.bounds.size.width * thePageControl.currentPage, self.scrollView.contentOffset.y) animated: YES] ;
}
    
    
#pragma mark -
#pragma mark UIScrollView delegate methods
    
- (void)scrollViewDidScroll:(UIScrollView *)aScrollView
{
        CGFloat pageWidth = self.scrollView.bounds.size.width ;
        float fractionalPage = self.scrollView.contentOffset.x / pageWidth ;
        NSInteger nearestNumber = lround(fractionalPage) ;
    
        self.introLabel.text = [introText objectAtIndex:nearestNumber];
    
        if (self.pageControl.currentPage != nearestNumber)
        {
            self.pageControl.currentPage = nearestNumber ;
            // if we are dragging, we want to update the page control directly during the drag
            if (self.scrollView.dragging)
                [self.pageControl updateCurrentPageDisplay];
        }
}
    
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)aScrollView
{
        // if we are animating (triggered by clicking on the page control), we update the page control
    [self.pageControl updateCurrentPageDisplay];
}
    
    
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
        return (interfaceOrientation == UIInterfaceOrientationPortrait) ;
}


- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (IBAction)getStartedTapped:(id)sender
{
    //HomeViewController *hmv = [self.storyboard instantiateViewControllerWithIdentifier:@"HomeViewController"];
    
//    UINavigationController *navController = [[UINavigationController alloc]initWithRootViewController:hmv];
//    navController.navigationBar.tintColor = Rgb2UIColor(139, 23, 41);
//    [self presentViewController:navController animated:YES completion:nil];
    
   // [self.navigationController pushViewController:hmv animated:YES];
    [ApplicationData sharedInstance].isFirstTime = NO;
    [self dismissViewControllerAnimated:YES completion:nil];
    
}
@end
